⭕ What is PHP?

✅ PHP is a server side scripting language. that is used to develop Static websites or Dynamic websites or Web applications.
    PHP stands for Hypertext Pre-processor, that earlier stood for Personal Home Pages.

⭕ What is Scripting Language?

✅ A script is a set of programming instructions that is interpreted at runtime.

✅ The purpose of the scripts is usually to enhance the performance or perform routine tasks for an application.

✅ Server side scripts are interpreted on the server while client side scripts are interpreted by the client application.

⭕ Programming Language Vs Scripting Language

✅ 
    Programming language	                                                    Scripting language
+-------------------------------------------------------------------------------------------------------------------------------------+
1. Has all the features needed to develop complete applications.	            Mostly used for routine tasks
2. The code has to be compiled before it can be executed	                    The code is usually executed without compiling
3. Does not need to be embedded into other languages	                        Is usually embedded into other software environments.

⭕ What does PHP stand for?

✅ PHP: Hypertext Preprocessor.
✅ HTML is an added advantage when learning PHP Language. You can even learn PHP without knowing HTML but it’s recommended you at least know the basics of HTML.
✅ Database management systems DBMS for database powered applications.
✅ For more advanced topics such as interactive applications and web services, you will need JavaScript and XML.

⭕ Why use PHP?

✅  do not need to have PHP installed; only a web browser would be enough.
✅  PHP has in built support for working hand in hand with MySQL
✅  PHP is cross platform; this means you can deploy your application on a number of different operating systems such as windows, Linux, Mac OS etc.

⭕ PHP File Extension

✅ .phtml
✅ .php3
✅ .php4
✅ .php5
✅ .phps
✅ <?php … ?>

⭕ XAMPP

⭕ PHP Data Types, Variables, Constant, Operators Tutorial

🛑 PHP Data Types

✅ A Data type is the classification of data into a category according to its attributes;

        Alphanumeric characters are classified as strings
        Whole numbers are classified integers
        Numbers with decimal points are classified as floating points.
        True or false values are classified as Boolean.

🛑 PHP Variables

✅ All variable names must start with the dollar sign.
✅ The var_dump function is used to determine the data type. 

    Example:

    $a = 1;
    var_dump($a);

    O/p:
    int(1)

🛑 PHP Constant

✅  A constant is a variable whose value cannot be changed at runtime.

    Example:

    define(‘PI’,3.14); 

🛑 PHP Operators 

✅ Arithmetic

Operator	    Name	            Description	                                Example	                    Output
+---------------------------------------------------------------------------------------------------------------------------+

+	            Addition	        Summation of x and y	                    1 + 1;	                    2
–	            Subtraction	        Difference between x and y	                1 – 1;	                    0
*	            Multiplication	    Multiplies x and y	                        3 * 7;	                    21
/	            Division	        Quotient of x and y	                        45 / 5;	                    9
%	            PHP Modulus	        Gives remainder of dividing x and y	        10 % 3;	                    1
-n	            Negation	        Turns n into a negative number	            -(-5);	                    5
x . y	        Concatenation	    Puts together x and y	                    “PHP” . ” ROCKS”;10 . 3;	PHP ROCKS103

✅ Assignment

Operator	    Name	            Description	                        Example	                            Output
+-----------------------------------------------------------------------------------------------------------------------------+

x = ?	        assignment	        Assigns the value of x to ?	        $x = 5;	                            5
x += ?	        addition	        Increments the value of x by ?	    $x = 2;$x += 1;	                    3
X -= ?	        subtraction	        Subtracts ? from the value of x	    $x = 3;$x -= 2;	                    1
X *=?	        multiplication	    Multiplies the value of x ? times	$x = 0;$x *=9;	                    0
X /=?	        division	        Quotient of x and ?	                $x = 6;$x /=3;	                    2
X %=?	        modulus	            The reminder of dividing x by?	    $x = 3;$x %= 2;	                    1
X .=?	        concatenate	        Puts together items	”               $x = ‘Pretty’;$x .= ‘ Cool!’;”	    Pretty Cool!

✅ Comparison

Operator	    Name	                Description	                                                                    Example	        Output
+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

X == y	        Equal	                Compares x and y then returns true if they are equal	                        1 == “1”;	    True or 1
X === y	        identical	            Compares both values and data types.	                                        1 === “1”;	    False or 0. Since 1 is integer and “1” is string
X != y,x <> y	PHP Not equal	        Compares values of x and y. returns true if the values are not equal	        2 != 1;	        True or 1
X > y	        Greater than	        Compares values of x and y. returns true if x is greater than y	                3 > 1;	        True or 1
X < y	        Less than	            Compares values of x and y. returns true if x is less than y	                2 < 1;	        False or 0
X >= y	        Greater than or equal	Compares values of x and y. returns true if x is greater than or equal to y	    1 >=1	        True or 1
X <= y	        Less than or equal	    Compares values of x and y. returns true if x is greater than or equal to y	    8 <= 6	        False or 0

✅ Logical

Operator	            Name	                Description	                                        Example	                Output
+--------------------------------------------------------------------------------------------------------------------------------------------------+

X and y, x && y	        And	                    Returns true if both x and y are equal	            1 and 4;True&& False;	True or 1False or 0
X or y, x || y	        Or	                    Returns true if either x or y is true	            6 or 9;0 || 0;	        True or 1False or 0
X xor y	                Exclusive or, xor	    Returns true if only x is true or only y is true	1 xor 1;1 xor 0;	    False or 0True or 1
!x	                    Not	                    Returns true if x is false and false if x is true	!0;	                    True or 1

⭕ PHP Comments

✅ //
✅ /* */

⭕ PHP Include & PHP Include_once

✅ The “include” php statement is used to include other files into a PHP file.

✅ It has two variations, include and include_once. Include_once is ignored by the PHP interpreter if the file to be included.

⭕ PHP Require & PHP require_once

✅ The require statement has two variations, require and require_once.

✅ The require/require_once statement is used to include file.

✅ Require_once is ignored if the required file has already been added by any of the four include statements.

⭕ PHP Array

✅ A PHP array is a variable that stores more than one piece of related data in a single variable.

🛑 Numeric Arrays

✅ Numeric arrays use number as access keys.

✅ An access key is a reference to a memory slot in an array variable.

✅ The access key is used whenever we want to read or assign a new value an array element.

    Example:
    
    $movie[0] = 'Shaolin Monk';
    $movie[1] = 'Drunken Master';
    $movie[2] = 'American Ninja';
    $movie[3] = 'Once upon a time in China';
    $movie[4] = 'Replacement Killers';

    $movie = array(0 => "Shaolin Monk",
               1 => "Drunken Master",
               2 => "American Ninja",
               3 => "Once upon a time in China",
               4 =>"Replacement Killers" );

🛑 PHP Associative Array

✅ Associative array differ from numeric array in the sense that associative arrays use descriptive names for id keys.

    Example:

    <?php
    $variable_name['key_name'] = value;

    $variable_name = array('keyname' => value);
    ?>

🛑 PHP Multi-Dimensional arrays

✅ These are arrays that contain other nested arrays.

✅ The advantage of multidimensional arrays is that they allow us to group related data together.

🛑 PHP Array Functions:

✅ Count : The count function is used to count the number of elements that an php array contains. The code below shows the implementation.

    Example:

    <?php
    $lecturers = array("Mr. Jones", "Mr. Banda", "Mrs. Smith");
    echo count($lecturers);
    ?>

✅ is_array function : The is_array function is used to determine if a variable is an array or not. Let’s now look at an example that implements the is_array functions.

✅ Sort : This function is used to sort arrays by the values.

    NOTE: It removes the existing access keys and add new numeric keys.

        Example:
        
        <?php
        $persons = array("Mary" => "Female", "John" => "Male", "Mirriam" => "Female");

        sort($persons);

        print_r($persons);
        ?>

        O/P:

        Array ( [0] => Female [1] => Female [2] => Male )

✅ ksort: This function is used to sort the array using the key. The following example illustrates its usage.

✅ asort : This function is used to sort the array using the values. The following example illustrates its usage.

    Example:

    <?php
    $persons = array("Mary" => "Female", "John" => "Male", "Mirriam" => "Female");
    asort($persons);
    print_r($persons);
    ?>

    O/P:

    Array ( [Mary] => Female [Mirriam] => Female [John] => Male )

⭕ What is a control structure?

✅ Code execution can be grouped into categories as shown below

        Sequential – this one involves executing all the codes in the order in which they have been written.
        Decision – this one involves making a choice given a number of options. The code executed depends on the value of the condition.

🛑 PHP IF Else

✅ 
        <?php
        if (condition is true) {

        block one

        else

        block two

        }
        ?>

🛑 PHP Switch Case

✅

Example:

<?php
switch(condition){
case value:
//block of code to be executed
break;
case value2:
//block of code to be executed
break
default://default block code
break;
}
?>

⭕ PHP Loop: For, ForEach, While, Do While 

🛑 PHP For Loop

✅ for

    Syntax:

    <?php
    for (initialize; condition; increment){

    //code to be executed

    }
    ?>
    
✅ for… each.

    Syntax:

    <?php
    foreach($array_variable  as $array_values){

    block of code to be executed

    }
    ?> 

🛑 While Loop

✅ They are used to execute a block of code a repeatedly until the set condition gets satisfied

✅ Types of while loops

    Do… while –     executes the block of code at least once before evaluating the condition
    While… –    checks the condition first. If it evaluates to true, the block of code is executed as long as the condition is true. 
                If it evaluates to false, the execution of the while loop is terminated.

✅ 
    <?php
    while (condition){

    block of code to be executed;

    }
    ?>

✅

<?php
do{

block of code to be executed

}
while(condition);
?>

⭕ PHP Strings

🛑
🛑
